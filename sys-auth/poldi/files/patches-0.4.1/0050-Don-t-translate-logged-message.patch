From 6091c0af2537ff100dcbbd66029d2302a7d5c5c1 Mon Sep 17 00:00:00 2001
From: NIIBE Yutaka <gniibe@fsij.org>
Date: Tue, 15 Nov 2016 13:03:15 +0900
Subject: [PATCH 50/52] Don't translate logged message.

* src/pam/auth-method-localdb/auth-localdb.c,
src/pam/auth-method-localdb/key-lookup.c,
src/pam/auth-method-x509/auth-x509.c, src/pam/auth-method-x509/dirmngr.c,
src/pam/auth-support/getpin-cb.c, src/pam/pam_poldi.c: Don't translate.

--

Signed-off-by: NIIBE Yutaka <gniibe@fsij.org>
---
 src/pam/auth-method-localdb/auth-localdb.c |  7 ++---
 src/pam/auth-method-localdb/key-lookup.c   | 10 +++---
 src/pam/auth-method-x509/auth-x509.c       | 26 ++++++++--------
 src/pam/auth-method-x509/dirmngr.c         |  6 ++--
 src/pam/auth-support/getpin-cb.c           |  8 ++---
 src/pam/pam_poldi.c                        | 36 ++++++++++------------
 src/scd/scd.c                              | 11 +++----
 7 files changed, 48 insertions(+), 56 deletions(-)

diff --git a/src/pam/auth-method-localdb/auth-localdb.c b/src/pam/auth-method-localdb/auth-localdb.c
index 3081737..d73808d 100644
--- a/src/pam/auth-method-localdb/auth-localdb.c
+++ b/src/pam/auth-method-localdb/auth-localdb.c
@@ -148,7 +148,7 @@ auth_method_localdb_auth_do (poldi_ctx_t ctx,
   if (err)
     {
       log_msg_error (ctx->loghandle,
-		     _("failed to generate challenge: %s"),
+		     "failed to generate challenge: %s",
 		     gpg_strerror (err));
       goto out;
     }
@@ -160,7 +160,7 @@ auth_method_localdb_auth_do (poldi_ctx_t ctx,
   if (err)
     {
       log_msg_error (ctx->loghandle,
-		     _("failed to retrieve challenge signature from card: %s"),
+		     "failed to retrieve challenge signature from card: %s",
 		     gpg_strerror (err));
       goto out;
     }
@@ -169,8 +169,7 @@ auth_method_localdb_auth_do (poldi_ctx_t ctx,
   err = challenge_verify (key, challenge, challenge_n, response, response_n);
   if (err)
     {
-      log_msg_error (ctx->loghandle,
-		     _("failed to verify challenge"));
+      log_msg_error (ctx->loghandle, "failed to verify challenge");
       goto out;
     }
 
diff --git a/src/pam/auth-method-localdb/key-lookup.c b/src/pam/auth-method-localdb/key-lookup.c
index c7a8840..20fce4a 100644
--- a/src/pam/auth-method-localdb/key-lookup.c
+++ b/src/pam/auth-method-localdb/key-lookup.c
@@ -60,8 +60,8 @@ key_lookup_by_serialno (poldi_ctx_t ctx, const char *serialno, gcry_sexp_t *key)
   if (err)
     {
       log_msg_error (ctx->loghandle,
-		     _("failed to construct key file path "
-		       "for serial number `%s': %s\n"),
+		     "failed to construct key file path "
+		     "for serial number `%s': %s\n",
 		     serialno, gpg_strerror (err));
       goto out;
     }
@@ -72,7 +72,7 @@ key_lookup_by_serialno (poldi_ctx_t ctx, const char *serialno, gcry_sexp_t *key)
   if (err)
     {
       log_msg_error (ctx->loghandle,
-		     _("failed to retrieve key from key file `%s': %s\n"),
+		     "failed to retrieve key from key file `%s': %s\n",
 		     key_path, gpg_strerror (err));
       goto out;
     }
@@ -81,8 +81,8 @@ key_lookup_by_serialno (poldi_ctx_t ctx, const char *serialno, gcry_sexp_t *key)
   if (err)
     {
       log_msg_error (ctx->loghandle,
-		     _("failed to convert key "
-		       "from `%s' into S-Expression: %s\n"),
+		     "failed to convert key "
+		     "from `%s' into S-Expression: %s\n",
 		     key_path, gpg_strerror (err));
       goto out;
     }
diff --git a/src/pam/auth-method-x509/auth-x509.c b/src/pam/auth-method-x509/auth-x509.c
index 3d7c0f2..fafdc9e 100644
--- a/src/pam/auth-method-x509/auth-x509.c
+++ b/src/pam/auth-method-x509/auth-x509.c
@@ -120,7 +120,7 @@ auth_method_x509_parsecb (void *opaque, simpleparse_opt_spec_t spec, const char
       if (!x509_ctx->x509_domain)
 	{
 	  log_msg_error (ctx->loghandle,
-			 _("failed to duplicate %s (length: %i): %s"),
+			 "failed to duplicate %s (length: %i): %s",
 			 "x509-domain option string",
 			 strlen (arg), strerror (errno));
 	  err = gpg_error_from_syserror ();
@@ -132,7 +132,7 @@ auth_method_x509_parsecb (void *opaque, simpleparse_opt_spec_t spec, const char
       if (!x509_ctx->dirmngr_socket)
 	{
 	  log_msg_error (ctx->loghandle,
-			 _("failed to duplicate %s (length: %i): %s"),
+			 "failed to duplicate %s (length: %i): %s",
 			 "dirmngr-socket option string",
 			 strlen (arg), strerror (errno));
 	  err = gpg_error_from_syserror ();
@@ -164,7 +164,7 @@ extract_public_key_from_cert (poldi_ctx_t ctx, ksba_cert_t cert, gcry_sexp_t *pu
   if (!sexp_len)
     {
       log_msg_error (ctx->loghandle,
-		     _("libksba did not return a proper S-Exp"));
+		     "libksba did not return a proper S-Exp");
       err = GPG_ERR_BUG;
       goto out;
     }
@@ -173,7 +173,7 @@ extract_public_key_from_cert (poldi_ctx_t ctx, ksba_cert_t cert, gcry_sexp_t *pu
   if (err)
     {
       log_msg_error (ctx->loghandle,
-		     _("failed to convert KSBA s-expression into s-expression object: %s"),
+		     "failed to convert KSBA s-expression into s-expression object: %s",
 		     gpg_strerror (err));
       goto out;
     }
@@ -405,7 +405,7 @@ extract_username_from_cert (poldi_ctx_t ctx, ksba_cert_t cert,
   else
     {
       log_msg_error (ctx->loghandle,
-		     _("failed to extract username from certificate"));
+		     "failed to extract username from certificate");
       err = gpg_error (GPG_ERR_UNSUPPORTED_CERT);
     }
 
@@ -439,7 +439,7 @@ lookup_cert (poldi_ctx_t ctx, dirmngr_ctx_t dirmngr, const char *url,
   else
     {
       log_msg_error (ctx->loghandle,
-		     _("invalid certificate URL on card"));
+		     "invalid certificate URL on card");
       err = GPG_ERR_INV_CARD;
     }
   if (err)
@@ -486,7 +486,7 @@ auth_method_x509_auth_do (poldi_ctx_t ctx, x509_ctx_t cookie,
     {
       err = gpg_error (GPG_ERR_CONFIGURATION);
       log_msg_error (ctx->loghandle,
-		     _("x509 authentication method not properly configured"));
+		     "x509 authentication method not properly configured");
       goto out;
     }
 
@@ -508,7 +508,7 @@ auth_method_x509_auth_do (poldi_ctx_t ctx, x509_ctx_t cookie,
   if (err)
     {
       log_msg_error (ctx->loghandle,
-		     _("failed to look up certificate `%s': %s"),
+		     "failed to look up certificate `%s': %s",
 		     ctx->cardinfo.pubkey_url, gpg_strerror (err));
       goto out;
     }
@@ -548,8 +548,7 @@ auth_method_x509_auth_do (poldi_ctx_t ctx, x509_ctx_t cookie,
   err = challenge_generate (&challenge, &challenge_n);
   if (err)
     {
-      log_msg_error (ctx->loghandle,
-		     _("failed to generate challenge: %s"),
+      log_msg_error (ctx->loghandle, "failed to generate challenge: %s",
 		     gpg_strerror (err));
       goto out;
     }
@@ -561,7 +560,7 @@ auth_method_x509_auth_do (poldi_ctx_t ctx, x509_ctx_t cookie,
   if (err)
     {
       log_msg_error (ctx->loghandle,
-		     _("failed to retrieve challenge signature from card: %s"),
+		     "failed to retrieve challenge signature from card: %s",
 		     gpg_strerror (err));
       goto out;
     }
@@ -573,8 +572,7 @@ auth_method_x509_auth_do (poldi_ctx_t ctx, x509_ctx_t cookie,
 			      response, response_n);
   if (err)
     {
-      log_msg_error (ctx->loghandle,
-		     _("failed to verify challenge signature"));
+      log_msg_error (ctx->loghandle, "failed to verify challenge signature");
       goto out;
     }
 
@@ -594,7 +592,7 @@ auth_method_x509_auth_do (poldi_ctx_t ctx, x509_ctx_t cookie,
 
   /* Log result.  */
   if (err)
-    log_msg_error (ctx->loghandle, _("failure: %s"), gpg_strerror (err));
+    log_msg_error (ctx->loghandle, "failure: %s", gpg_strerror (err));
   else if (ctx->debug)
     log_msg_debug (ctx->loghandle, "success");
 
diff --git a/src/pam/auth-method-x509/dirmngr.c b/src/pam/auth-method-x509/dirmngr.c
index a95bf71..7c5ad70 100644
--- a/src/pam/auth-method-x509/dirmngr.c
+++ b/src/pam/auth-method-x509/dirmngr.c
@@ -154,12 +154,12 @@ inq_cert (void *opaque, const char *line)
       err = assuan_send_data (parm->ctx->assuan, NULL, 0);
       if (err)
 	log_msg_error (parm->ctx->log_handle,
-		       _("failed to send back empty value to dirmngr: %s"),
+		       "failed to send back empty value to dirmngr: %s",
 		       gpg_strerror (err));
     }
   else
     {
-      log_msg_error (parm->ctx->log_handle, _("unsupported assuan inquiry `%s'"), line);
+      log_msg_error (parm->ctx->log_handle, "unsupported assuan inquiry `%s'", line);
       err = gpg_error (GPG_ERR_ASS_UNKNOWN_INQUIRE);
       /* Note that this error will let assuan_transact terminate
          immediately instead of return the error to the caller.  It is
@@ -255,7 +255,7 @@ lookup_cb (void *opaque, const void *buffer, size_t length)
       if (rc)
 	{
 	  log_msg_error (parm->ctx->log_handle,
-			 _("failed to create new ksba certificate object: %s"),
+			 "failed to create new ksba certificate object: %s",
 			 gpg_strerror (rc));
 	  /* FIXME: better error handling?  -mo */
 	}
diff --git a/src/pam/auth-support/getpin-cb.c b/src/pam/auth-support/getpin-cb.c
index c5d7ba8..d06c50f 100644
--- a/src/pam/auth-support/getpin-cb.c
+++ b/src/pam/auth-support/getpin-cb.c
@@ -71,7 +71,7 @@ query_user (poldi_ctx_t ctx, const char *info, char *pin, size_t pin_size)
 
       if (strlen (buffer) < 6)	/* FIXME? is it really minimum of 6 bytes? */
 	{
-	  log_msg_error (ctx->loghandle, _("PIN too short"));
+	  log_msg_error (ctx->loghandle, "PIN too short");
 	  conv_tell (ctx->conv, "%s", _("PIN too short"));
 	}
       else
@@ -80,7 +80,7 @@ query_user (poldi_ctx_t ctx, const char *info, char *pin, size_t pin_size)
 
   if (strlen (buffer) >= pin_size)
     {
-      log_msg_error (ctx->loghandle, _("PIN too long for buffer!"));
+      log_msg_error (ctx->loghandle, "PIN too long for buffer!");
       rc = gpg_error (GPG_ERR_INV_DATA); /* ? */
       goto out;
     }
@@ -201,7 +201,7 @@ getpin_cb (void *opaque, const char *info, char *buf, size_t maxbuf)
 	      /* Weird that we received flags - they are neither expected nor
 		 implemented here.  */
 	      log_msg_error (ctx->loghandle,
-			     _("getpin_cb called with flags set in info string `%s'\n"),
+			     "getpin_cb called with flags set in info string `%s'\n",
 			     info);
 	      err = gpg_error (GPG_ERR_INV_VALUE); /* FIXME? */
 	      goto out;
@@ -211,7 +211,7 @@ getpin_cb (void *opaque, const char *info, char *buf, size_t maxbuf)
       if (err)
 	{
 	  log_msg_error (ctx->loghandle,
-			 _("frob_info_msg failed for info msg of size %u\n"),
+			 "frob_info_msg failed for info msg of size %u\n",
 			 (unsigned int) strlen (info));
 	  goto out;
 	}
diff --git a/src/pam/pam_poldi.c b/src/pam/pam_poldi.c
index 5992e5c..cb4cb3e 100644
--- a/src/pam/pam_poldi.c
+++ b/src/pam/pam_poldi.c
@@ -140,7 +140,7 @@ pam_poldi_options_cb (void *cookie, simpleparse_opt_spec_t spec, const char *arg
 	{
 	  err = gpg_error_from_errno (errno);
 	  log_msg_error (ctx->loghandle,
-			 _("failed to duplicate %s: %s"),
+			 "failed to duplicate %s: %s",
 			 "logfile name", gpg_strerror (err));
 	}
     }
@@ -153,7 +153,7 @@ pam_poldi_options_cb (void *cookie, simpleparse_opt_spec_t spec, const char *arg
 	{
 	  err = gpg_error_from_errno (errno);
 	  log_msg_error (ctx->loghandle,
-			 _("failed to duplicate %s: %s"),
+			 "failed to duplicate %s: %s",
 			 "scdaemon program name",
 			 gpg_strerror (err));
 	}
@@ -167,7 +167,7 @@ pam_poldi_options_cb (void *cookie, simpleparse_opt_spec_t spec, const char *arg
 	{
 	  err = gpg_error_from_errno (errno);
 	  log_msg_error (ctx->loghandle,
-			 _("failed to duplicate %s: %s"),
+			 "failed to duplicate %s: %s",
 			 "scdaemon options name",
 			 gpg_strerror (err));
 	}
@@ -182,7 +182,7 @@ pam_poldi_options_cb (void *cookie, simpleparse_opt_spec_t spec, const char *arg
       else
 	{
 	  log_msg_error (ctx->loghandle,
-			 _("unknown authentication method '%s'"),
+			 "unknown authentication method '%s'",
 			 arg);
 	  err = GPG_ERR_INV_VALUE;
 	}
@@ -310,7 +310,7 @@ modify_environment_putenv (pam_handle_t *pam_handle, poldi_ctx_t ctx,
   if (ret < 0)
     {
       log_msg_error (ctx->loghandle,
-		     _("asprintf() failed in modify_environment_putenv(): %s"),
+		     "asprintf() failed in modify_environment_putenv(): %s",
 		     errno);
       return;
     }
@@ -319,7 +319,7 @@ modify_environment_putenv (pam_handle_t *pam_handle, poldi_ctx_t ctx,
   if (ret != PAM_SUCCESS)
     {
       log_msg_error (ctx->loghandle,
-		     _("pam_putenv() failed in modify_environment_putenv(): %s"),
+		     "pam_putenv() failed in modify_environment_putenv(): %s",
 		     pam_strerror (pam_handle, ret));
     }
   free (str);
@@ -404,7 +404,7 @@ pam_sm_authenticate (pam_handle_t *pam_handle,
   if (err)
     {
       log_msg_error (ctx->loghandle,
-		     _("failed to parse configuration file '%s': %s"),
+		     "failed to parse configuration file '%s': %s",
 		     POLDI_CONF_FILE,
 		     gpg_strerror (err));
       goto out;
@@ -417,7 +417,7 @@ pam_sm_authenticate (pam_handle_t *pam_handle,
       if (err)
 	{
 	  log_msg_error (ctx->loghandle,
-			 _("failed to parse PAM argument vector: %s"),
+			 "failed to parse PAM argument vector: %s",
 			 gpg_strerror (err));
 	  goto out;
 	}
@@ -446,7 +446,7 @@ pam_sm_authenticate (pam_handle_t *pam_handle,
   if (ctx->auth_method < 0)
     {
       log_msg_error (ctx->loghandle,
-		     _("no authentication method specified"));
+		     "no authentication method specified");
       err = GPG_ERR_CONFIGURATION;
       goto out;
     }
@@ -460,7 +460,7 @@ pam_sm_authenticate (pam_handle_t *pam_handle,
   if (ctx->debug)
     {
       log_msg_debug (ctx->loghandle,
-		     _("using authentication method `%s'"),
+		     "using authentication method `%s'",
 		     auth_methods[ctx->auth_method].name);
     }
 
@@ -472,7 +472,7 @@ pam_sm_authenticate (pam_handle_t *pam_handle,
       if (err)
 	{
 	  log_msg_error (ctx->loghandle,
-			 _("failed to initialize authentication method %i: %s"),
+			 "failed to initialize authentication method %i: %s",
 			 -1, gpg_strerror (err));
 	  goto out;
 	}
@@ -486,7 +486,7 @@ pam_sm_authenticate (pam_handle_t *pam_handle,
       if (err)
 	{
 	  log_msg_error (ctx->loghandle,
-			 _("failed to initialize parsing of configuration file for authentication method %s: %s"),
+			 "failed to initialize parsing of configuration file for authentication method %s: %s",
 			 auth_methods[ctx->auth_method].name, gpg_strerror (err));
 	  goto out_parsing;
 	}
@@ -507,7 +507,7 @@ pam_sm_authenticate (pam_handle_t *pam_handle,
       if (err)
 	{
 	  log_msg_error (ctx->loghandle,
-			 _("failed to parse configuration for authentication method %i: %s"),
+			 "failed to parse configuration for authentication method %i: %s",
 			 auth_methods[ctx->auth_method].name, gpg_strerror (err));
 	  goto out_parsing;
 	}
@@ -526,7 +526,7 @@ pam_sm_authenticate (pam_handle_t *pam_handle,
   if (ret != PAM_SUCCESS)
     {
       log_msg_error (ctx->loghandle,
-		     _("failed to retrieve PAM conversation structure"));
+		     "failed to retrieve PAM conversation structure");
       err = GPG_ERR_INTERNAL;
       goto out;
     }
@@ -544,8 +544,7 @@ pam_sm_authenticate (pam_handle_t *pam_handle,
   if (ret != PAM_SUCCESS)
     {
       /* It's not fatal, username can be in the card.  */
-      log_msg_error (ctx->loghandle,
-		     _("Can't retrieve username from PAM"));
+      log_msg_error (ctx->loghandle, "Can't retrieve username from PAM");
     }
 
   /*** Check if we use gpg-agent. ***/
@@ -602,8 +601,7 @@ pam_sm_authenticate (pam_handle_t *pam_handle,
   err = wait_for_card (ctx->scd, 0);
   if (err)
     {
-      log_msg_error (ctx->loghandle,
-		     _("failed to wait for card insertion: %s"),
+      log_msg_error (ctx->loghandle, "failed to wait for card insertion: %s",
 		     gpg_strerror (err));
       goto out;
     }
@@ -660,7 +658,7 @@ pam_sm_authenticate (pam_handle_t *pam_handle,
 
   /* Log result.  */
   if (err)
-    log_msg_error (ctx->loghandle, _("authentication failed: %s"), gpg_strerror (err));
+    log_msg_error (ctx->loghandle, "authentication failed: %s", gpg_strerror (err));
   else
     {
       if (ctx->debug)
diff --git a/src/scd/scd.c b/src/scd/scd.c
index fe6613a..5d1b835 100644
--- a/src/scd/scd.c
+++ b/src/scd/scd.c
@@ -225,8 +225,7 @@ scd_connect (scd_context_t *scd_ctx, int use_agent, const char *scd_path,
   if (fflush (NULL))
     {
       err = gpg_error_from_syserror ();
-      log_msg_error (loghandle,
-		     _("error flushing pending output: %s"),
+      log_msg_error (loghandle, "error flushing pending output: %s",
 		     strerror (errno));
       return err;
     }
@@ -305,14 +304,12 @@ scd_connect (scd_context_t *scd_ctx, int use_agent, const char *scd_path,
       err = assuan_pipe_connect (&assuan_ctx, scd_path, argv, no_close_list);
       if (err)
 	{
-	  log_msg_error (loghandle,
-			 _("could not spawn scdaemon: %s"),
+	  log_msg_error (loghandle, "could not spawn scdaemon: %s",
 			 gpg_strerror (err));
 	}
       else
 	{
-	  log_msg_debug (loghandle,
-			 "spawned a new scdaemon (path: '%s')",
+	  log_msg_debug (loghandle, "spawned a new scdaemon (path: '%s')",
 			 scd_path);
 	}
     }
@@ -856,7 +853,7 @@ scd_getinfo (scd_context_t ctx, const char *what, char **result)
       if (!res)
 	{
 	  log_msg_error (ctx->loghandle,
-			 _("warning: can't store getinfo data: %s"),
+			 "warning: can't store getinfo data: %s",
 			 strerror (errno));
 	  rc = gpg_error_from_syserror ();
 	}
-- 
2.17.0

